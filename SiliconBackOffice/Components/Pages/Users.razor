@page "/users"

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using SiliconBackOffice.Data
@using Microsoft.AspNetCore.Components.Authorization
@using SiliconBackOffice.Services

@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext
@inject RoleService RoleService
@inject NavigationManager NavigationManager

@attribute [StreamRendering]
@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        @if (IsManager)
        {
            <p>Welcome, Manager!</p>
        }
        else
        {
            <p>Welcome, User!</p>
        }
    </Authorized>
</AuthorizeView>

<h3>Total Registered Users: @userCount</h3>

@* <ul>
    @foreach (var user in users)
    {
        <li>
            @if (user.UserProfile != null)
            {
                <a href="@($"/users/edit/{user.Id}")">@user.UserProfile.FirstName @user.UserProfile.LastName</a>
            }
            else
            {
                <a href="@($"/users/edit/{user.Id}")">@user.Email</a>
            }
        </li>
    }
</ul> *@

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>User Name</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.UserProfile.FirstName @user.UserProfile.LastName</td>
                <td>@user.Email</td>
                <td>
                    <button class="btn btn-theme"
                            @onclick="() => EditUser(user.Id)">
                        Edit
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private bool IsManager { get; set; }
    private int userCount;
    private List<ApplicationUser> users = new List<ApplicationUser>();

    protected override async Task OnInitializedAsync()
    {
        IsManager = await RoleService.IsManagerAsync();
        users = await DbContext.Users.Include(u => u.UserProfile).ToListAsync();
        userCount = users.Count;
    }

    private void EditUser(string userId)
    {
        NavigationManager.NavigateTo($"/users/edit/{userId}");
    }
}